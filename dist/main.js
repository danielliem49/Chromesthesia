/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_scripts_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../../../../src/scripts/game */ \"./src/scripts/game.js\");\n\n\n// Setup Canvas\nconst canvasWidth = window.innerWidth;\nconst canvasHeight = window.innerHeight;\nconst canvas = document.getElementById(\"game-canvas\");\ncanvas.setAttribute(\"width\", canvasWidth);\ncanvas.setAttribute(\"height\", canvasHeight);\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"hsla(0,0,0,1)\";\nctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n// toggle menu with button\nconst toggleBtn = document.getElementById(\"toggleBtn\");\nconst controlContent = document.getElementById(\"control-content\");\ntoggleBtn.addEventListener(\"click\", event => {\n  event.preventDefault();\n  event.stopPropagation();\n  controlContent.style.display = controlContent.style.display === \"none\" ? \"flex\" : \"none\";\n});\n\n// initialize game and title screen, click to start/stop\nlet game = new _src_scripts_game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas);\nlet title = document.getElementById(\"title\");\nlet clicktostart = document.getElementById(\"clicktostart\");\nlet name = document.getElementById(\"name\");\ncanvas.addEventListener(\"click\", event => {\n  event.preventDefault();\n  event.stopPropagation();\n  game.running = !game.running;\n  game.music.play();\n  clicktostart.classList.toggle(\"no-animation\");\n  clicktostart.classList.toggle(\"hidden\");\n  name.classList.toggle(\"hidden\");\n\n  // setTimeout(() => {\n  //     name.classList = \"hidden\";\n  // }, 200)\n\n  setTimeout(() => {\n    title.classList = \"hidden\";\n  }, 4000);\n  if (game.running) {\n    game.start();\n  } else {\n    game.stop();\n  }\n});\n\n//sliders and control\nlet dropdown1 = document.getElementById(\"reset-timer\");\nlet radio1 = document.getElementById(\"shadowblack\");\nlet radio2 = document.getElementById(\"whitesmoke\");\nlet radio3 = document.getElementById(\"monochrome\");\nlet radio4 = document.getElementById(\"noSpecialEffects\");\nlet slider1 = document.getElementById(\"colorVariety\");\nlet slider2 = document.getElementById(\"particleStep\");\nlet slider3 = document.getElementById(\"particleBase\");\nlet slider4 = document.getElementById(\"xBias\");\nlet slider5 = document.getElementById(\"yBias\");\n\n// set control defaults\ndropdown1.value = game.resetTimer;\nradio1.checked = game.shadowblack;\nradio2.checked = game.whitesmoke;\nradio3.checked = game.monochrome;\nradio4.checked = game.noSpecialEffects;\nslider1.value = game.hueVariation;\nslider2.value = game.step;\nslider3.value = game.base;\nslider4.value = game.xBias;\nslider5.value = game.yBias;\n\n// control event listeners\ndropdown1.addEventListener(\"input\", function () {\n  game.resetTimer = this.value;\n  if (game.resetTimer) {\n    if (game.running) {\n      game.reset();\n    }\n  }\n});\nradio1.addEventListener(\"input\", function () {\n  game.shadowblack = true;\n  game.whitesmoke = false;\n  game.monochrome = false;\n  game.noSpecialEffects = false;\n  if (game.shadowblack) {\n    game.light = 0;\n    game.hueVariation = slider1.value;\n    game.hueIncrement = 0.2;\n  }\n});\nradio2.addEventListener(\"input\", function () {\n  game.shadowblack = false;\n  game.whitesmoke = true;\n  game.monochrome = false;\n  game.noSpecialEffects = false;\n  if (game.whitesmoke) {\n    game.light = 1;\n    game.hueVariation = slider1.value;\n    game.hueIncrement = 0.2;\n  }\n});\nradio3.addEventListener(\"input\", function () {\n  game.shadowblack = false;\n  game.whitesmoke = false;\n  game.monochrome = true;\n  game.noSpecialEffects = false;\n  if (game.monochrome) {\n    game.light = 0.5;\n    game.hueVariation = 0;\n    game.hueIncrement = 0;\n    slider1.value = game.hueVariation;\n  }\n});\nradio4.addEventListener(\"input\", function () {\n  game.shadowblack = false;\n  game.whitesmoke = false;\n  game.monochrome = false;\n  game.noSpecialEffects = true;\n  if (game.noSpecialEffects) {\n    game.light = 0.5;\n    game.hueVariation = slider1.value;\n    game.hueIncrement = 0.2;\n  }\n});\nslider1.addEventListener(\"input\", function () {\n  if (game.monochrome) {\n    game.hueVariation = 0;\n  } else {\n    game.hueVariation = this.value;\n  }\n});\nslider2.addEventListener(\"input\", function () {\n  game.step = this.value;\n});\nslider3.addEventListener(\"input\", function () {\n  game.base = this.value;\n});\nslider4.addEventListener(\"input\", function () {\n  game.xBias = this.value;\n});\nslider5.addEventListener(\"input\", function () {\n  game.yBias = this.value;\n});\n\n// music\n// music toggle mute\nconst muteButton = document.getElementById(\"muteButton\");\nconst unmuteButton = document.getElementById(\"unmuteButton\");\nunmuteButton.classList.add(\"hidden\");\nmuteButton.addEventListener(\"click\", () => {\n  game.music.volume = 0.0;\n  unmuteButton.classList.remove(\"hidden\");\n  muteButton.classList.add(\"hidden\");\n});\nunmuteButton.addEventListener(\"click\", () => {\n  game.music.volume = 0.1;\n  muteButton.classList.remove(\"hidden\");\n  unmuteButton.classList.add(\"hidden\");\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _particle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./particle.js */ \"./src/scripts/particle.js\");\n/* harmony import */ var simplex_noise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! simplex-noise */ \"./node_modules/simplex-noise/dist/esm/simplex-noise.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nclass Game {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.DIM_X = canvas.width;\n    this.DIM_Y = canvas.height;\n    this.ctx = canvas.getContext(\"2d\");\n    this.particles = [];\n\n    // algorithm variable start values\n    this.zStart = 0;\n    this.wStart = 0;\n\n    // rands, reset at each game.start()\n    this.noise4D = (0,simplex_noise__WEBPACK_IMPORTED_MODULE_1__.createNoise4D)(Math.random);\n    this.rand = Math.random();\n    this.hueStart = Math.random() * 360;\n\n    // for preset modes\n    this.hueIncrement = Game.DEFAULTS.hueIncrement;\n\n    // UI adjustable variables\n    this.resetTimer = Game.DEFAULTS.resetTimer;\n    this.monochrome = false;\n    this.whitesmoke = false;\n    this.shadowblack = false;\n    this.noSpecialEffects = true;\n    this.light = Game.DEFAULTS.light;\n    this.hueVariation = Game.DEFAULTS.hueVariation;\n    this.step = Game.DEFAULTS.step;\n    this.base = Game.DEFAULTS.base;\n    this.xBias = Game.DEFAULTS.xBias;\n    this.yBias = Game.DEFAULTS.yBias;\n\n    // game state\n    this.running = false;\n    this.awaitingRestart = false;\n\n    // music\n    this.music = document.createElement(\"audio\");\n    this.music.src = \"assets/music1.mp3\";\n    this.music.volume = 0.1;\n  }\n  addParticles() {\n    if (this.particles.length) {\n      this.particles = [];\n    }\n    for (let i = 0; i < Game.DEFAULTS.particlesNum; i++) {\n      let particle = new _particle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0, 0, {});\n      this.resetParticle(particle);\n      this.particles.push(particle);\n    }\n  }\n  resetParticle(particle) {\n    particle.x = this.DIM_X * Math.random();\n    particle.y = this.DIM_Y * Math.random();\n    // color hue in degrees\n    particle.color = {\n      h: this.hueStart + this.hueVariation * Math.atan2(this.DIM_Y - particle.y, this.DIM_X - particle.x) * 180 / Math.PI,\n      s: 1,\n      l: this.light,\n      a: 0\n    };\n  }\n  resetRands() {\n    this.noise4D = (0,simplex_noise__WEBPACK_IMPORTED_MODULE_1__.createNoise4D)(Math.random);\n    this.rand = Math.random();\n    this.hueStart = Math.random() * 360;\n  }\n  getNoise(x, y, z, w) {\n    let octaves = 4,\n      fallout = 0.25,\n      amp = 1,\n      f = 1,\n      sum = 0;\n    for (let i = 0; i < octaves; ++i) {\n      amp *= fallout;\n      sum += amp * this.noise4D(x * f, y * f, z * f, w * f);\n      f *= 2;\n    }\n    return sum;\n  }\n  update() {\n    let step = this.step,\n      base = this.base;\n\n    // randomly move clockwise/anticlockwise on colorwheel, and set preset modes\n    if (this.rand > 0.5) {\n      this.hueStart += this.hueIncrement;\n    } else {\n      this.hueStart -= this.hueIncrement;\n    }\n    for (let i = 0; i < this.particles.length; i++) {\n      let p = this.particles[i];\n\n      // updates new pos of x and y, and saves old pos\n      p.lastX = p.x;\n      p.lastY = p.y;\n      let angle = Math.PI * 6 * this.getNoise(p.x / base * this.yBias, p.y / base * this.xBias, this.zStart, this.wStart);\n      p.x += Math.cos(angle) * step;\n      p.y += Math.sin(angle) * step;\n\n      // makes more opaque over time\n      if (p.color.a < 1) p.color.a += Game.DEFAULTS.alphaIncrement;\n\n      // actual drawing\n      this.ctx.beginPath();\n      this.ctx.strokeStyle = p.hsla();\n      this.ctx.moveTo(p.lastX, p.lastY);\n      this.ctx.lineTo(p.x, p.y);\n      this.ctx.stroke();\n\n      // reset particle with new initialization values when it hits an edge\n      if (p.x < 0 || p.x > this.DIM_X || p.y < 0 || p.y > this.DIM_Y) {\n        this.resetParticle(p);\n      }\n    }\n\n    // 4D \"randomness\"\n    this.zStart += Game.DEFAULTS.zIncrement;\n    this.wStart += Game.DEFAULTS.wIncrement;\n    this.raf = requestAnimationFrame(this.update.bind(this));\n  }\n  start() {\n    // make sure screen is cleared\n    this.ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n    this.ctx.fillStyle = Game.DEFAULTS.backgroundColor;\n    this.ctx.fillRect(0, 0, this.DIM_X, this.DIM_Y);\n\n    // initialization\n    this.resetRands();\n    this.addParticles();\n    this.raf = requestAnimationFrame(this.update.bind(this));\n    this.reset();\n  }\n  stop() {\n    // gradual fade for screen clear\n    let timesRun = 0;\n    let a = 0;\n    let interval = setInterval(() => {\n      this.ctx.fillStyle = `rgba(0, 0, 0, ${a})`;\n      this.ctx.fillRect(0, 0, this.DIM_X, this.DIM_Y);\n      a += 0.05;\n      timesRun += 1;\n      if (timesRun === 20) clearInterval(interval);\n    }, 30);\n    if (this.awaitingRestart) clearTimeout(this.timerID);\n    this.awaitingRestart = false;\n    cancelAnimationFrame(this.raf);\n  }\n  reset() {\n    if (this.awaitingRestart) clearTimeout(this.timerID);\n    if (this.resetTimer) {\n      const resetAndStart = async () => {\n        this.timerID = null;\n        this.awaitingRestart = true;\n        const resetTimeout = () => new Promise(resolve => {\n          this.timerID = setTimeout(resolve, this.resetTimer);\n        });\n        await resetTimeout();\n        this.stop();\n        setTimeout(() => this.start(), 1000);\n      };\n      resetAndStart();\n    }\n  }\n}\n_defineProperty(Game, \"DEFAULTS\", {\n  backgroundColor: 'black',\n  particlesNum: 1000,\n  zIncrement: 0.001,\n  wIncrement: 0.001,\n  hueIncrement: 0.2,\n  alphaIncrement: 0.002,\n  // UI Adjustable\n  resetTimer: 300000,\n  light: 0.5,\n  hueVariation: 2,\n  step: 6,\n  base: 200,\n  xBias: 1,\n  yBias: 1\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/particle.js":
/*!*********************************!*\
  !*** ./src/scripts/particle.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Particle {\n  constructor(x, y, color) {\n    this.x = x;\n    this.y = y;\n    this.color = color;\n  }\n  hsla() {\n    return 'hsla(' + this.color.h + ',' + this.color.s * 100 + '%,' + this.color.l * 100 + '%,' + this.color.a + ')';\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Particle);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wYXJ0aWNsZS5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsTUFBTUEsUUFBUSxDQUFDO0VBQ1hDLFdBQVcsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEtBQUssRUFBQztJQUNwQixJQUFJLENBQUNGLENBQUMsR0FBR0EsQ0FBQztJQUNWLElBQUksQ0FBQ0MsQ0FBQyxHQUFHQSxDQUFDO0lBQ1YsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7RUFFdEI7RUFFQUMsSUFBSSxHQUFFO0lBQ0YsT0FBTyxPQUFPLEdBQUcsSUFBSSxDQUFDRCxLQUFLLENBQUNFLENBQUMsR0FBRyxHQUFHLEdBQUksSUFBSSxDQUFDRixLQUFLLENBQUNHLENBQUMsR0FBRyxHQUFJLEdBQUcsSUFBSSxHQUFJLElBQUksQ0FBQ0gsS0FBSyxDQUFDSSxDQUFDLEdBQUcsR0FBSSxHQUFHLElBQUksR0FBRyxJQUFJLENBQUNKLEtBQUssQ0FBQ0ssQ0FBQyxHQUFHLEdBQUc7RUFDeEg7QUFDSjtBQUVBLCtEQUFlVCxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNwcm9qZWN0Mi8uL3NyYy9zY3JpcHRzL3BhcnRpY2xlLmpzP2MwNWUiXSwic291cmNlc0NvbnRlbnQiOlsiXG5jbGFzcyBQYXJ0aWNsZSB7XG4gICAgY29uc3RydWN0b3IoeCwgeSAsY29sb3Ipe1xuICAgICAgICB0aGlzLnggPSB4O1xuICAgICAgICB0aGlzLnkgPSB5O1xuICAgICAgICB0aGlzLmNvbG9yID0gY29sb3I7XG5cbiAgICB9IFxuXG4gICAgaHNsYSgpe1xuICAgICAgICByZXR1cm4gJ2hzbGEoJyArIHRoaXMuY29sb3IuaCArICcsJyArICh0aGlzLmNvbG9yLnMgKiAxMDApICsgJyUsJyArICh0aGlzLmNvbG9yLmwgKiAxMDApICsgJyUsJyArIHRoaXMuY29sb3IuYSArICcpJztcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBhcnRpY2xlOyJdLCJuYW1lcyI6WyJQYXJ0aWNsZSIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJjb2xvciIsImhzbGEiLCJoIiwicyIsImwiLCJhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/particle.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QyLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./node_modules/simplex-noise/dist/esm/simplex-noise.js":
/*!**************************************************************!*\
  !*** ./node_modules/simplex-noise/dist/esm/simplex-noise.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buildPermutationTable\": function() { return /* binding */ buildPermutationTable; },\n/* harmony export */   \"createNoise2D\": function() { return /* binding */ createNoise2D; },\n/* harmony export */   \"createNoise3D\": function() { return /* binding */ createNoise3D; },\n/* harmony export */   \"createNoise4D\": function() { return /* binding */ createNoise4D; }\n/* harmony export */ });\n/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n Copyright (c) 2022 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n// these #__PURE__ comments help uglifyjs with dead code removal\n// \nconst F2 = /*#__PURE__*/ 0.5 * (Math.sqrt(3.0) - 1.0);\nconst G2 = /*#__PURE__*/ (3.0 - Math.sqrt(3.0)) / 6.0;\nconst F3 = 1.0 / 3.0;\nconst G3 = 1.0 / 6.0;\nconst F4 = /*#__PURE__*/ (Math.sqrt(5.0) - 1.0) / 4.0;\nconst G4 = /*#__PURE__*/ (5.0 - Math.sqrt(5.0)) / 20.0;\n// I'm really not sure why this | 0 (basically a coercion to int)\n// is making this faster but I get ~5 million ops/sec more on the\n// benchmarks across the board or a ~10% speedup.\nconst fastFloor = (x) => Math.floor(x) | 0;\nconst grad2 = /*#__PURE__*/ new Float64Array([1, 1,\n    -1, 1,\n    1, -1,\n    -1, -1,\n    1, 0,\n    -1, 0,\n    1, 0,\n    -1, 0,\n    0, 1,\n    0, -1,\n    0, 1,\n    0, -1]);\n// double seems to be faster than single or int's\n// probably because most operations are in double precision\nconst grad3 = /*#__PURE__*/ new Float64Array([1, 1, 0,\n    -1, 1, 0,\n    1, -1, 0,\n    -1, -1, 0,\n    1, 0, 1,\n    -1, 0, 1,\n    1, 0, -1,\n    -1, 0, -1,\n    0, 1, 1,\n    0, -1, 1,\n    0, 1, -1,\n    0, -1, -1]);\n// double is a bit quicker here as well\nconst grad4 = /*#__PURE__*/ new Float64Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n    0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n    1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n    -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n    1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n    -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n    1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n    -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]);\n/**\n * Creates a 2D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction2D}\n */\nfunction createNoise2D(random = Math.random) {\n    const perm = buildPermutationTable(random);\n    // precalculating this yields a little ~3% performance improvement.\n    const permGrad2x = new Float64Array(perm).map(v => grad2[(v % 12) * 2]);\n    const permGrad2y = new Float64Array(perm).map(v => grad2[(v % 12) * 2 + 1]);\n    return function noise2D(x, y) {\n        // if(!isFinite(x) || !isFinite(y)) return 0;\n        let n0 = 0; // Noise contributions from the three corners\n        let n1 = 0;\n        let n2 = 0;\n        // Skew the input space to determine which simplex cell we're in\n        const s = (x + y) * F2; // Hairy factor for 2D\n        const i = fastFloor(x + s);\n        const j = fastFloor(y + s);\n        const t = (i + j) * G2;\n        const X0 = i - t; // Unskew the cell origin back to (x,y) space\n        const Y0 = j - t;\n        const x0 = x - X0; // The x,y distances from the cell origin\n        const y0 = y - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n        else {\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        const x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        const y1 = y0 - j1 + G2;\n        const x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n        const y2 = y0 - 1.0 + 2.0 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            const gi0 = ii + perm[jj];\n            const g0x = permGrad2x[gi0];\n            const g0y = permGrad2y[gi0];\n            t0 *= t0;\n            // n0 = t0 * t0 * (grad2[gi0] * x0 + grad2[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n            n0 = t0 * t0 * (g0x * x0 + g0y * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            const gi1 = ii + i1 + perm[jj + j1];\n            const g1x = permGrad2x[gi1];\n            const g1y = permGrad2y[gi1];\n            t1 *= t1;\n            // n1 = t1 * t1 * (grad2[gi1] * x1 + grad2[gi1 + 1] * y1);\n            n1 = t1 * t1 * (g1x * x1 + g1y * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            const gi2 = ii + 1 + perm[jj + 1];\n            const g2x = permGrad2x[gi2];\n            const g2y = permGrad2y[gi2];\n            t2 *= t2;\n            // n2 = t2 * t2 * (grad2[gi2] * x2 + grad2[gi2 + 1] * y2);\n            n2 = t2 * t2 * (g2x * x2 + g2y * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70.0 * (n0 + n1 + n2);\n    };\n}\n/**\n * Creates a 3D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction3D}\n */\nfunction createNoise3D(random = Math.random) {\n    const perm = buildPermutationTable(random);\n    // precalculating these seems to yield a speedup of over 15%\n    const permGrad3x = new Float64Array(perm).map(v => grad3[(v % 12) * 3]);\n    const permGrad3y = new Float64Array(perm).map(v => grad3[(v % 12) * 3 + 1]);\n    const permGrad3z = new Float64Array(perm).map(v => grad3[(v % 12) * 3 + 2]);\n    return function noise3D(x, y, z) {\n        let n0, n1, n2, n3; // Noise contributions from the four corners\n        // Skew the input space to determine which simplex cell we're in\n        const s = (x + y + z) * F3; // Very nice and simple skew factor for 3D\n        const i = fastFloor(x + s);\n        const j = fastFloor(y + s);\n        const k = fastFloor(z + s);\n        const t = (i + j + k) * G3;\n        const X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n        const Y0 = j - t;\n        const Z0 = k - t;\n        const x0 = x - X0; // The x,y,z distances from the cell origin\n        const y0 = y - Y0;\n        const z0 = z - Z0;\n        // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n        // Determine which simplex we are in.\n        let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n        let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n        if (x0 >= y0) {\n            if (y0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // X Y Z order\n            else if (x0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // X Z Y order\n            else {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // Z X Y order\n        }\n        else { // x0<y0\n            if (y0 < z0) {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Z Y X order\n            else if (x0 < z0) {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Y Z X order\n            else {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // Y X Z order\n        }\n        // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n        // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n        // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n        // c = 1/6.\n        const x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n        const y1 = y0 - j1 + G3;\n        const z1 = z0 - k1 + G3;\n        const x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n        const y2 = y0 - j2 + 2.0 * G3;\n        const z2 = z0 - k2 + 2.0 * G3;\n        const x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n        const y3 = y0 - 1.0 + 3.0 * G3;\n        const z3 = z0 - 1.0 + 3.0 * G3;\n        // Work out the hashed gradient indices of the four simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        const kk = k & 255;\n        // Calculate the contribution from the four corners\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n        if (t0 < 0)\n            n0 = 0.0;\n        else {\n            const gi0 = ii + perm[jj + perm[kk]];\n            t0 *= t0;\n            n0 = t0 * t0 * (permGrad3x[gi0] * x0 + permGrad3y[gi0] * y0 + permGrad3z[gi0] * z0);\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n        if (t1 < 0)\n            n1 = 0.0;\n        else {\n            const gi1 = ii + i1 + perm[jj + j1 + perm[kk + k1]];\n            t1 *= t1;\n            n1 = t1 * t1 * (permGrad3x[gi1] * x1 + permGrad3y[gi1] * y1 + permGrad3z[gi1] * z1);\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n        if (t2 < 0)\n            n2 = 0.0;\n        else {\n            const gi2 = ii + i2 + perm[jj + j2 + perm[kk + k2]];\n            t2 *= t2;\n            n2 = t2 * t2 * (permGrad3x[gi2] * x2 + permGrad3y[gi2] * y2 + permGrad3z[gi2] * z2);\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n        if (t3 < 0)\n            n3 = 0.0;\n        else {\n            const gi3 = ii + 1 + perm[jj + 1 + perm[kk + 1]];\n            t3 *= t3;\n            n3 = t3 * t3 * (permGrad3x[gi3] * x3 + permGrad3y[gi3] * y3 + permGrad3z[gi3] * z3);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to stay just inside [-1,1]\n        return 32.0 * (n0 + n1 + n2 + n3);\n    };\n}\n/**\n * Creates a 4D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction4D}\n */\nfunction createNoise4D(random = Math.random) {\n    const perm = buildPermutationTable(random);\n    // precalculating these leads to a ~10% speedup\n    const permGrad4x = new Float64Array(perm).map(v => grad4[(v % 32) * 4]);\n    const permGrad4y = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 1]);\n    const permGrad4z = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 2]);\n    const permGrad4w = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 3]);\n    return function noise4D(x, y, z, w) {\n        let n0, n1, n2, n3, n4; // Noise contributions from the five corners\n        // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n        const s = (x + y + z + w) * F4; // Factor for 4D skewing\n        const i = fastFloor(x + s);\n        const j = fastFloor(y + s);\n        const k = fastFloor(z + s);\n        const l = fastFloor(w + s);\n        const t = (i + j + k + l) * G4; // Factor for 4D unskewing\n        const X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n        const Y0 = j - t;\n        const Z0 = k - t;\n        const W0 = l - t;\n        const x0 = x - X0; // The x,y,z,w distances from the cell origin\n        const y0 = y - Y0;\n        const z0 = z - Z0;\n        const w0 = w - W0;\n        // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n        // To find out which of the 24 possible simplices we're in, we need to\n        // determine the magnitude ordering of x0, y0, z0 and w0.\n        // Six pair-wise comparisons are performed between each possible pair\n        // of the four coordinates, and the results are used to rank the numbers.\n        let rankx = 0;\n        let ranky = 0;\n        let rankz = 0;\n        let rankw = 0;\n        if (x0 > y0)\n            rankx++;\n        else\n            ranky++;\n        if (x0 > z0)\n            rankx++;\n        else\n            rankz++;\n        if (x0 > w0)\n            rankx++;\n        else\n            rankw++;\n        if (y0 > z0)\n            ranky++;\n        else\n            rankz++;\n        if (y0 > w0)\n            ranky++;\n        else\n            rankw++;\n        if (z0 > w0)\n            rankz++;\n        else\n            rankw++;\n        // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n        // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n        // impossible. Only the 24 indices which have non-zero entries make any sense.\n        // We use a thresholding to set the coordinates in turn from the largest magnitude.\n        // Rank 3 denotes the largest coordinate.\n        // Rank 2 denotes the second largest coordinate.\n        // Rank 1 denotes the second smallest coordinate.\n        // The integer offsets for the second simplex corner\n        const i1 = rankx >= 3 ? 1 : 0;\n        const j1 = ranky >= 3 ? 1 : 0;\n        const k1 = rankz >= 3 ? 1 : 0;\n        const l1 = rankw >= 3 ? 1 : 0;\n        // The integer offsets for the third simplex corner\n        const i2 = rankx >= 2 ? 1 : 0;\n        const j2 = ranky >= 2 ? 1 : 0;\n        const k2 = rankz >= 2 ? 1 : 0;\n        const l2 = rankw >= 2 ? 1 : 0;\n        // The integer offsets for the fourth simplex corner\n        const i3 = rankx >= 1 ? 1 : 0;\n        const j3 = ranky >= 1 ? 1 : 0;\n        const k3 = rankz >= 1 ? 1 : 0;\n        const l3 = rankw >= 1 ? 1 : 0;\n        // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n        const x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n        const y1 = y0 - j1 + G4;\n        const z1 = z0 - k1 + G4;\n        const w1 = w0 - l1 + G4;\n        const x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n        const y2 = y0 - j2 + 2.0 * G4;\n        const z2 = z0 - k2 + 2.0 * G4;\n        const w2 = w0 - l2 + 2.0 * G4;\n        const x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n        const y3 = y0 - j3 + 3.0 * G4;\n        const z3 = z0 - k3 + 3.0 * G4;\n        const w3 = w0 - l3 + 3.0 * G4;\n        const x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n        const y4 = y0 - 1.0 + 4.0 * G4;\n        const z4 = z0 - 1.0 + 4.0 * G4;\n        const w4 = w0 - 1.0 + 4.0 * G4;\n        // Work out the hashed gradient indices of the five simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        const kk = k & 255;\n        const ll = l & 255;\n        // Calculate the contribution from the five corners\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n        if (t0 < 0)\n            n0 = 0.0;\n        else {\n            const gi0 = ii + perm[jj + perm[kk + perm[ll]]];\n            t0 *= t0;\n            n0 = t0 * t0 * (permGrad4x[gi0] * x0 + permGrad4y[gi0] * y0 + permGrad4z[gi0] * z0 + permGrad4w[gi0] * w0);\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n        if (t1 < 0)\n            n1 = 0.0;\n        else {\n            const gi1 = ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]];\n            t1 *= t1;\n            n1 = t1 * t1 * (permGrad4x[gi1] * x1 + permGrad4y[gi1] * y1 + permGrad4z[gi1] * z1 + permGrad4w[gi1] * w1);\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n        if (t2 < 0)\n            n2 = 0.0;\n        else {\n            const gi2 = ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]];\n            t2 *= t2;\n            n2 = t2 * t2 * (permGrad4x[gi2] * x2 + permGrad4y[gi2] * y2 + permGrad4z[gi2] * z2 + permGrad4w[gi2] * w2);\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n        if (t3 < 0)\n            n3 = 0.0;\n        else {\n            const gi3 = ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]];\n            t3 *= t3;\n            n3 = t3 * t3 * (permGrad4x[gi3] * x3 + permGrad4y[gi3] * y3 + permGrad4z[gi3] * z3 + permGrad4w[gi3] * w3);\n        }\n        let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n        if (t4 < 0)\n            n4 = 0.0;\n        else {\n            const gi4 = ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]];\n            t4 *= t4;\n            n4 = t4 * t4 * (permGrad4x[gi4] * x4 + permGrad4y[gi4] * y4 + permGrad4z[gi4] * z4 + permGrad4w[gi4] * w4);\n        }\n        // Sum up and scale the result to cover the range [-1,1]\n        return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    };\n}\n/**\n * Builds a random permutation table.\n * This is exported only for (internal) testing purposes.\n * Do not rely on this export.\n * @private\n */\nfunction buildPermutationTable(random) {\n    const tableSize = 512;\n    const p = new Uint8Array(tableSize);\n    for (let i = 0; i < tableSize / 2; i++) {\n        p[i] = i;\n    }\n    for (let i = 0; i < tableSize / 2 - 1; i++) {\n        const r = i + ~~(random() * (256 - i));\n        const aux = p[i];\n        p[i] = p[r];\n        p[r] = aux;\n    }\n    for (let i = 256; i < tableSize; i++) {\n        p[i] = p[i - 256];\n    }\n    return p;\n}\n//# sourceMappingURL=simplex-noise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/simplex-noise/dist/esm/simplex-noise.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;